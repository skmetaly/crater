// Generated by CoffeeScript 1.10.0
(function() {
  var extend, moduleSchema, mongoose, serverSchema, stageSchema;

  mongoose = require('mongoose');

  extend = require('lodash.assignin');

  serverSchema = require('./Server');

  moduleSchema = require('./Module');

  stageSchema = mongoose.Schema({
    name: {
      type: String,
      crater: {
        suggestions: true
      }
    },
    servers: [serverSchema],
    urls: [String],
    modules: [moduleSchema],
    accessMethod: String
  }, {
    crater: {
      name: 'Stage'
    }
  });

  extend(stageSchema.statics, require('./methods/static/Base'));

  extend(stageSchema.methods, require('./methods/instance/Base'), require('./methods/instance/Stage'));

  stageSchema.virtual('url', {
    _jiri_aliasTarget: 'urls'
  }).get(function() {
    return this.urls[0];
  }).set(function(urls) {
    this.urls = urls;
    return this.markModified('urls');
  });

  stageSchema.virtual('server', {
    _jiri_aliasTarget: 'servers'
  }).get(function() {
    return this.servers[0];
  });

  stageSchema.virtual('cmsVersion').get(function() {
    var ref;
    return (ref = this.getModule('cms')) != null ? ref.version : void 0;
  });

  stageSchema.virtual('clientVersion').get(function() {
    var ref;
    return (ref = this.getModule('client')) != null ? ref.version : void 0;
  });

  stageSchema.virtual('customerVersion').get(function() {
    var ref;
    return (ref = this.getModule('client')) != null ? ref.version : void 0;
  });

  stageSchema.virtual('xfpVersion').get(function() {
    var ref;
    return (ref = this.getModule('xfp')) != null ? ref.version : void 0;
  });

  stageSchema.virtual('versions', {
    _jiri_aliasTarget: 'modules'
  }).get(function() {
    return this.modules;
  });

  stageSchema.virtual('software', {
    _jiri_aliasTarget: 'modules'
  }).get(function() {
    return this.modules;
  });

  stageSchema.virtual('installedSoftware', {
    _jiri_aliasTarget: 'modules'
  }).get(function() {
    return this.modules;
  });

  module.exports = stageSchema;

}).call(this);
